---
version: 0.2

branches:
  default:
    stage: pre-merge
models:
  - env: &global_env
      CI: 'true'
      CIRCLE_ARTIFACTS: '/tmp'
      CIRCLE_NODE_TOTAL: "4"
      CIRCLE_TEST_REPORTS: '/tmp'
      CI_REPORTS: '/tmp'
      ENABLE_LOCAL_CACHE: "1"
      REPORT_TOKEN: 'report-token-1'
#      AWS_ACCESS_KEY_ID_DEFAULT: '$AWS_S3_BACKEND_ACCESS_KEY'
#      AWS_ACCESS_KEY_ID_DEFAULT_2: '$AWS_S3_BACKEND_ACCESS_KEY_2'
#      AWS_SECRET_ACCESS_KEY_DEFAULT: '$AWS_S3_BACKEND_SECRET_KEY'
#      AWS_SECRET_ACCESS_KEY_DEFAULT_2: '$AWS_S3_BACKEND_SECRET_KEY_2'
#      azurebackend2_AZURE_STORAGE_ACCESS_KEY: '$AZURE_BACKEND_ACCESS_KEY_2'
#      azurebackend2_AZURE_STORAGE_ACCOUNT_NAME: '$AZURE_BACKEND_ACCOUNT_NAME_2'
#      azurebackend2_AZURE_STORAGE_ENDPOINT: '$AZURE_BACKEND_ENDPOINT_2'
#      azurebackend_AZURE_STORAGE_ACCESS_KEY: '$AZURE_BACKEND_ACCESS_KEY'
#      azurebackend_AZURE_STORAGE_ACCOUNT_NAME: '$AZURE_BACKEND_ACCOUNT_NAME'
#      azurebackend_AZURE_STORAGE_ENDPOINT: '$AZURE_BACKEND_ENDPOINT'
#      azurebackendmismatch_AZURE_STORAGE_ACCESS_KEY: '$AZURE_BACKEND_ACCESS_KEY'
#      azurebackendmismatch_AZURE_STORAGE_ACCOUNT_NAME: |
#        '$AZURE_BACKEND_ACCOUNT_NAME'
#      azurebackendmismatch_AZURE_STORAGE_ENDPOINT: '$AZURE_BACKEND_ENDPOINT'
#      azurenonexistcontainer_AZURE_STORAGE_ACCESS_KEY: |
#        '$AZURE_BACKEND_ACCESS_KEY'
#      azurenonexistcontainer_AZURE_STORAGE_ACCOUNT_NAME: |
#        '$AZURE_BACKEND_ACCOUNT_NAME'
#      azurenonexistcontainer_AZURE_STORAGE_ENDPOINT: '$AZURE_BACKEND_ENDPOINT'
#      azuretest_AZURE_BLOB_ENDPOINT: '$AZURE_BACKEND_ENDPOINT'
  - Git: &clone
      name: Pull repo
      repourl: '%(prop:git_reference)s'
      shallow: True
      retryFetch: True
      haltOnFailure: True
      # Machine Setup
  - ShellCommand: &update_hosts
      name: Update hosts
      command: sudo bash -c "echo '
               127.0.0.1     \
               bucketwebsitetester.s3-website-us-east-1.amazonaws.com
               ' >> /etc/hosts"
      haltOnFailure: True
stages:
  pre-merge:
    worker: &master-worker
      type: docker
      path: eve/workers/build
      volumes: &default_volumes
        - '/home/eve/workspace'
    steps:
      - TriggerStages:
          name: Launch all nodes simultaneously
          stage_names:
            - node0
          #  - node1
          #  - node2
          #  - node3
          waitForFinish: True
          haltOnFailure: True
  node0:
    worker: *master-worker
    steps:
      - Git: *clone
      - ShellCommand: *update_hosts
      - ShellCommand:
          command: rm -rf node_modules
      - ShellCommand:
          command: npm install
      - ShellCommandWithSecrets:
          name: Node 1 Tests
          command: sudo -E bash -l tests.bash
          env:
            <<: *global_env
            CIRCLE_NODE_INDEX: "0"
          haltOnFailure: True
  node1:
    worker: *master-worker
    steps:
      - Git: *clone
  node2:
    worker: *master-worker
    steps:
      - Git: *clone
  node3:
    worker: *master-worker
    steps:
      - Git: *clone
      - ShellCommand: *update_hosts
