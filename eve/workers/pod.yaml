---
apiVersion: v1
kind: Pod
metadata:
  name: "proxy-ci-test-pod"
spec:
  activeDeadlineSeconds: 3600
  restartPolicy: Never
  terminationGracePeriodSeconds: 10
  containers:
    - name: aggressor
      image: {{ images.aggressor }}
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 1Gi
      volumeMounts:
        - name: creds
          mountPath: /root/.aws
      command:
        - bash
        - -lc
        - |
          buildbot-worker create-worker . $BUILDMASTER:$BUILDMASTER_PORT $WORKERNAME $WORKERPASS
          buildbot-worker start --nodaemon
      env:
        - name: S3BACKEND
          value: "{{ vars.S3BACKEND }}"
        - name: MPU_TESTING
          value: "{{ vars.MPU_TESTING }}"
        - name: S3DATA
          value: "{{ vars.S3DATA }}"
        - name: CI_PROXY
          value: "{{ vars.CI_PROXY }}"
    - name: s3
      image: {{ images.s3 }}
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 2Gi
      command:
       - sh
       - -exc
       - |
         ls /root/.aws
         if ! [ -f "/root/.aws/credentials" ]; then
            exit 1
         fi
         npm start
      volumeMounts:
        - name: creds
          readOnly: false
          mountPath: /root/.aws
      env:
        - name: CI
          value: "true"
        - name: S3BACKEND
          value: "{{ vars.S3BACKEND }}"
        - name: MPU_TESTING
          value: "{{ vars.MPU_TESTING }}"
        - name: S3DATA
          value: "{{ vars.S3DATA }}"
        - name: CI_PROXY
          value: "{{ vars.CI_PROXY }}"
    {% if vars.CI_PROXY -%}
    - name: squid
      image: {{ images.squid }}
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 1Gi
      command:
        - sh
        - -exc
        - |
          mkdir -p /ssl
          openssl req -new -newkey rsa:2048 -sha256 -days 365 -nodes -x509 \
           -subj "/C=US/ST=Country/L=City/O=Organization/CN=CN=scality-proxy" \
           -keyout /ssl/myca.pem  -out /ssl/myca.pem
          squid -f /etc/squid/squid.conf -N -z
          squid -f /etc/squid/squid.conf -NYCd 1
    {%- endif %}
  volumes:
    - name: creds
      emptyDir: {}
